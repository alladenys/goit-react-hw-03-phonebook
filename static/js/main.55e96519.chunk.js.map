{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","id","handleInputChange","e","setState","currentTarget","value","reset","handleSubmitForm","preventDefault","props","onAddContact","this","forNameId","uuidv4","forNumberId","className","style","form","onSubmit","label","title","onChange","input","type","pattern","required","button","onClick","Component","Filter","ContactItem","contacts","onDeleteContact","container","contactContainer","delButton","ContactsList","list","map","App","data","filter","textChange","getReserchedContacts","normilizedText","toLowerCase","contact","includes","addNewContact","find","option","alert","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevPops","setItem","stringify","renewList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55e96519.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"title\":\"ContactForm_title__3MqSl\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactItem_container__1aoJL\",\"contactContainer\":\"ContactItem_contactContainer__1GldO\",\"name\":\"ContactItem_name__1bT_p\",\"number\":\"ContactItem_number__f5Ixf\",\"delButton\":\"ContactItem_delButton__b24Aw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\"};","import React, { Component } from 'react';\nimport style from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n        id:''\n    }\n\n    handleInputChange = e => {\n        this.setState({\n          [e.currentTarget.name]: e.currentTarget.value,\n        });\n      };\n\n    reset = () => {\n        this.setState({\n          name: '',\n          number: '',\n        });\n      };\n    \n\n    handleSubmitForm = e => {\n        e.preventDefault();\n        const { name, value } = e.currentTarget;\n        this.setState({[name]: value});\n        this.props.onAddContact(this.state);\n        this.reset();\n    }\n\n    render() {\n        const { name, number } = this.state;\n        const forNameId = uuidv4();\n        const forNumberId = uuidv4();\n        return (\n                <form className={style.form} onSubmit={this.handleSubmitForm}>\n                <label className={style.label}>\n                    <span className={style.title}>Name</span>\n                    <input\n                        value={name}\n                        id = {forNameId}\n                        onChange={this.handleInputChange}\n                        className={style.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                    />\n                </label>\n                <label className={style.label}>\n                    <span className={style.title}>Number</span>\n                    <input\n                        value={number}\n                        id = {forNumberId}\n                        onChange={this.handleInputChange}\n                        className={style.input}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                    />\n                </label>\n                <button className={style.button} type=\"submit\" onClick={this.handleSubmitForm}>Add contact</button>\n            </form>\n        )\n    }\n\n}\n\nexport default ContactForm;","import React from 'react';\nimport style from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n    <label className={style.label}>\n        <span>Find contact by name</span>\n        <input\n            className={style.input}\n            type=\"text\"\n            value={value}\n            onChange={onChange}\n        />\n    </label>\n)\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChange:PropTypes.func.isRequired\n};\n\n\n\nexport default Filter;","import React from 'react';\nimport style from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ contacts, onDeleteContact}) => (\n  <div className={style.container}>\n    <div className={style.contactContainer}>\n    <span className={style.name}>{contacts.name}:</span>\n    <span className={style.number}>{contacts.number}</span></div>\n    <button className={style.delButton} onClick={()=> onDeleteContact(contacts.id)}>Delete</button>\n  </div>\n);\n\nContactItem.propTypes = {\n  contacts: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired\n  }),\n  onDeleteContact:PropTypes.func.isRequired\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from '../ContactItem/ContactItem';\nimport style from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (<ul className={style.list}>\n    {contacts.map((contacts)=>(<li key={contacts.id}><ContactItem contacts={contacts} onDeleteContact={onDeleteContact}></ContactItem></li>))}\n    </ul>\n)\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n        })\n    ),\n    onDeleteContact:PropTypes.func.isRequired\n};\nexport default ContactsList;\n\n","import './App.css';\nimport React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\n\nimport data from './data/contacts.json';\nimport ContactsList from './components/ContactsList/ContactsList';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: data,\n    filter: '',\n  };\n\n  textChange = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getReserchedContacts = () => {\n    const { contacts, filter } = this.state;\n    const normilizedText = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizedText),\n    );\n  };\n\n  addNewContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.find(option => option.name.toLowerCase() === name.toLowerCase())\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevPops, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  render() {\n    const renewList = this.getReserchedContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addNewContact}></ContactForm>\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.textChange}></Filter>\n        <ContactsList\n          contacts={renewList}\n          onDeleteContact={this.deleteContact}\n        ></ContactsList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}